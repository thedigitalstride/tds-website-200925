/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
    notFound: NotFound;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    notFound: NotFoundSelect<false> | NotFoundSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  /**
   * Override the global header CTA button for this page. Leave disabled to use the global header CTA button.
   */
  ctaButton?: {
    /**
     * Enable to configure a custom CTA button for this page
     */
    enabled?: boolean | null;
    link?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: number | Post;
          } | null);
      url?: string | null;
      label: string;
      /**
       * Button color variant from UntitledUI design system
       */
      uuiColor?: ('primary' | 'accent' | 'secondary' | 'tertiary' | 'link') | null;
      /**
       * Button size variant
       */
      uuiSize?: ('sm' | 'md' | 'lg' | 'xl') | null;
      /**
       * Optional icon name from @untitledui/icons (e.g., "ArrowRight", "Download01", "ExternalLink01"). Case-sensitive. Browse all icons at: https://icons.untitledui.com
       */
      buttonIcon?: string | null;
      /**
       * Position of the icon relative to the button text
       */
      iconPos?: ('leading' | 'trailing') | null;
    };
  };
  title: string;
  layout?:
    | (
        | HeroHeadingBlock
        | BreadcrumbBlock
        | CallToActionBlock
        | ContentBlock
        | MediaBlock
        | ArchiveBlock
        | FormBlock
        | ButtonBlock
        | FeaturesBlock
        | LatestPostsBlock
      )[]
    | null;
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  parent?: (number | null) | Page;
  breadcrumbs?:
    | {
        doc?: (number | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  /**
   * Lead paragraph that appears under the title
   */
  subtitle?: string | null;
  /**
   * Optional table of contents for the sidebar
   */
  tableOfContents?:
    | {
        title: string;
        /**
         * Link to section (e.g., #introduction)
         */
        href: string;
        id?: string | null;
      }[]
    | null;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  /**
   * People who contributed to this post (separate from authors)
   */
  contributors?: (number | User)[] | null;
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
        nickname?: string | null;
        avatar?: (number | null) | Media;
      }[]
    | null;
  populatedContributors?:
    | {
        id?: string | null;
        name?: string | null;
        nickname?: string | null;
        avatar?: (number | null) | Media;
      }[]
    | null;
  /**
   * Optional blocks to display after the main post content
   */
  afterContent?: (LatestPostsBlock | CallToActionBlock | MediaBlock)[] | null;
  slug?: string | null;
  slugLock?: boolean | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  /**
   * Display name for public content (e.g., blog posts)
   */
  nickname?: string | null;
  /**
   * Job title or role (e.g., "Product Manager", "Frontend Engineer")
   */
  role?: string | null;
  /**
   * Profile picture for contributor listings
   */
  avatar?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LatestPostsBlock".
 */
export interface LatestPostsBlock {
  header?: {
    /**
     * Toggle to show/hide the header section
     */
    showHeader?: boolean | null;
    /**
     * Small text above heading (e.g., "Our blog")
     */
    eyebrow?: string | null;
    /**
     * Main heading for the blog section
     */
    heading?: string | null;
    /**
     * Description text that appears below the heading
     */
    description?: string | null;
  };
  /**
   * Choose between automatically showing latest posts or manually selecting specific posts
   */
  contentSource?: ('latest' | 'manual') | null;
  opts?: {
    /**
     * How many latest posts to display
     */
    numPosts?: ('3' | '6' | '9' | '12') | null;
    /**
     * Optional: Show only posts from a specific category
     */
    categoryFilter?: (number | null) | Category;
  };
  /**
   * Manually select which posts to display
   */
  selectedPosts?: (number | Post)[] | null;
  buttonConfig?: {
    /**
     * Toggle to show/hide the button that links to all posts
     */
    showButton?: boolean | null;
    link?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: number | Post;
          } | null);
      url?: string | null;
      label: string;
      /**
       * Button color variant from UntitledUI design system
       */
      uuiColor?: ('primary' | 'accent' | 'secondary' | 'tertiary' | 'link') | null;
      /**
       * Button size variant
       */
      uuiSize?: ('sm' | 'md' | 'lg' | 'xl') | null;
      /**
       * Optional icon name from @untitledui/icons (e.g., "ArrowRight", "Download01", "ExternalLink01"). Case-sensitive. Browse all icons at: https://icons.untitledui.com
       */
      buttonIcon?: string | null;
      /**
       * Position of the icon relative to the button text
       */
      iconPos?: ('leading' | 'trailing') | null;
    };
  };
  /**
   * Configure how the blog section is displayed
   */
  layoutOptions?: {
    /**
     * Number of columns in the grid layout
     */
    columns?: ('2' | '3' | '4') | null;
    /**
     * Vertical spacing around this section
     */
    spacing?: ('compact' | 'normal' | 'spacious') | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'latestPosts';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Button color variant from UntitledUI design system
           */
          uuiColor?: ('primary' | 'accent' | 'secondary' | 'tertiary' | 'link') | null;
          /**
           * Button size variant
           */
          uuiSize?: ('sm' | 'md' | 'lg' | 'xl') | null;
          /**
           * Optional icon name from @untitledui/icons (e.g., "ArrowRight", "Download01", "ExternalLink01"). Case-sensitive. Browse all icons at: https://icons.untitledui.com
           */
          buttonIcon?: string | null;
          /**
           * Position of the icon relative to the button text
           */
          iconPos?: ('leading' | 'trailing') | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Vertical spacing around this section
   */
  spacing?: ('compact' | 'normal' | 'spacious') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  caption?: {
    /**
     * Caption text
     */
    text?: string | null;
    link?: {
      /**
       * Link URL (e.g., https://example.com)
       */
      url?: string | null;
      /**
       * Link text
       */
      text?: string | null;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroHeadingBlock".
 */
export interface HeroHeadingBlock {
  /**
   * Main headline text. Use line breaks to create multiple lines that will scale responsively.
   */
  headline: string;
  /**
   * Subtitle text displayed below the headline
   */
  subtitle?: string | null;
  /**
   * Color scheme for the headline. Brand Blue shows accent blue in dark mode and dark blue in light mode.
   */
  headlineColor?: ('primary' | 'brand') | null;
  /**
   * Color scheme for the subheading. Default shows brand-500 in light mode and white in dark mode.
   */
  subheadingColor?: ('default' | 'white') | null;
  /**
   * Text alignment for headline and subtitle
   */
  textAlignment?: ('left' | 'center') | null;
  /**
   * Vertical spacing around the hero section
   */
  spacing?: ('compact' | 'normal' | 'spacious') | null;
  /**
   * Size variant for the subtitle text - Small reduces to 75% of normal size
   */
  subtitleSize?: ('small' | 'normal') | null;
  /**
   * Add custom background with image, gradient, or custom styling
   */
  bg?: {
    /**
     * Toggle to enable background customization
     */
    enabled?: boolean | null;
    /**
     * Choose how tall the hero section should be. Full Height creates a full-screen hero that extends behind the header.
     */
    heightVariant?: ('default' | 'fullHeight') | null;
    /**
     * Background type - choose gradient for CSS gradients, image for uploads, or custom for animation containers
     */
    type?: ('none' | 'gradient' | 'image' | 'custom') | null;
    /**
     * Pre-configured gradient styles using theme colors
     */
    gradient?: ('brand-radial' | 'accent-gradient' | 'dark-light') | null;
    /**
     * Upload background image - will be optimized automatically
     */
    image?: (number | null) | Media;
    /**
     * Overlay darkness (0-100) - helps ensure text readability over images
     */
    imageOpacity?: number | null;
    /**
     * Custom CSS class for animation containers or React-based effects
     */
    customClass?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'heroHeading';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BreadcrumbBlock".
 */
export interface BreadcrumbBlock {
  /**
   * Vertical spacing around the breadcrumb section. Breadcrumbs typically use compact spacing.
   */
  spacing?: ('compact' | 'normal' | 'spacious') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'breadcrumb';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Button color variant from UntitledUI design system
           */
          uuiColor?: ('primary' | 'accent' | 'secondary' | 'tertiary' | 'link') | null;
          /**
           * Button size variant
           */
          uuiSize?: ('sm' | 'md' | 'lg' | 'xl') | null;
          /**
           * Optional icon name from @untitledui/icons (e.g., "ArrowRight", "Download01", "ExternalLink01"). Case-sensitive. Browse all icons at: https://icons.untitledui.com
           */
          buttonIcon?: string | null;
          /**
           * Position of the icon relative to the button text
           */
          iconPos?: ('leading' | 'trailing') | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Vertical spacing around this section
   */
  spacing?: ('compact' | 'normal' | 'spacious') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  /**
   * Vertical spacing around this section
   */
  spacing?: ('compact' | 'normal' | 'spacious') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ButtonBlock".
 */
export interface ButtonBlock {
  /**
   * Add one or more buttons with different styles and links
   */
  buttons?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Button color variant from UntitledUI design system
           */
          uuiColor?: ('primary' | 'accent' | 'secondary' | 'tertiary' | 'link') | null;
          /**
           * Button size variant
           */
          uuiSize?: ('sm' | 'md' | 'lg' | 'xl') | null;
          /**
           * Optional icon name from @untitledui/icons (e.g., "ArrowRight", "Download01", "ExternalLink01"). Case-sensitive. Browse all icons at: https://icons.untitledui.com
           */
          buttonIcon?: string | null;
          /**
           * Position of the icon relative to the button text
           */
          iconPos?: ('leading' | 'trailing') | null;
        };
        id?: string | null;
      }[]
    | null;
  layout?: ('horizontal' | 'vertical') | null;
  alignment?: ('left' | 'center' | 'right') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'buttonBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesBlock".
 */
export interface FeaturesBlock {
  header?: {
    /**
     * Toggle to show/hide the header section
     */
    showHeader?: boolean | null;
    /**
     * Small text above heading (e.g., "Features")
     */
    eyebrow?: string | null;
    /**
     * Main heading for the features section
     */
    heading?: string | null;
    /**
     * Description text that appears below the heading
     */
    description?: string | null;
    /**
     * Alignment of the section header
     */
    headerAlignment?: ('left' | 'center') | null;
  };
  features: {
    /**
     * Icon name from @untitledui/icons (e.g., "Zap", "MessageChatCircle", "ChartBreakoutSquare", "TrendUp01", "Users01"). Case-sensitive. Browse all icons at: https://icons.untitledui.com
     */
    icon?: string | null;
    title: string;
    /**
     * Brief description of this feature
     */
    description: string;
    /**
     * Add an optional call-to-action link or button
     */
    enableLink?: boolean | null;
    link?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: number | Post;
          } | null);
      url?: string | null;
      label: string;
      /**
       * Button color variant from UntitledUI design system
       */
      uuiColor?: ('primary' | 'accent' | 'secondary' | 'tertiary' | 'link') | null;
      /**
       * Button size variant
       */
      uuiSize?: ('sm' | 'md' | 'lg' | 'xl') | null;
      /**
       * Optional icon name from @untitledui/icons (e.g., "ArrowRight", "Download01", "ExternalLink01"). Case-sensitive. Browse all icons at: https://icons.untitledui.com
       */
      buttonIcon?: string | null;
      /**
       * Position of the icon relative to the button text
       */
      iconPos?: ('leading' | 'trailing') | null;
    };
    id?: string | null;
  }[];
  /**
   * Configure how the features section is displayed
   */
  layoutOptions?: {
    /**
     * Layout arrangement for feature cards (icon position and alignment)
     */
    cardStyle?: ('card' | 'centered-icon' | 'left-icon' | 'horizontal-icon' | 'elevated-box') | null;
    /**
     * Visual style for feature cards (background and borders)
     */
    cardBackground?: ('brand' | 'accent' | 'outline' | 'line' | 'grey') | null;
    /**
     * Number of columns in the grid (1-4). Automatically switches to full-width if only one feature exists.
     */
    columns?: ('1' | '2' | '3' | '4') | null;
    /**
     * Color scheme for icons - matches button system
     */
    iconColor?: ('brand' | 'accent' | 'secondary' | 'tertiary') | null;
    /**
     * Shape of the icon container
     */
    iconTheme?: ('rounded-square' | 'round') | null;
    /**
     * Vertical spacing around this section
     */
    spacing?: ('compact' | 'normal' | 'spacious') | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'features';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  ctaButton?:
    | T
    | {
        enabled?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              uuiColor?: T;
              uuiSize?: T;
              buttonIcon?: T;
              iconPos?: T;
            };
      };
  title?: T;
  layout?:
    | T
    | {
        heroHeading?: T | HeroHeadingBlockSelect<T>;
        breadcrumb?: T | BreadcrumbBlockSelect<T>;
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        buttonBlock?: T | ButtonBlockSelect<T>;
        features?: T | FeaturesBlockSelect<T>;
        latestPosts?: T | LatestPostsBlockSelect<T>;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroHeadingBlock_select".
 */
export interface HeroHeadingBlockSelect<T extends boolean = true> {
  headline?: T;
  subtitle?: T;
  headlineColor?: T;
  subheadingColor?: T;
  textAlignment?: T;
  spacing?: T;
  subtitleSize?: T;
  bg?:
    | T
    | {
        enabled?: T;
        heightVariant?: T;
        type?: T;
        gradient?: T;
        image?: T;
        imageOpacity?: T;
        customClass?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BreadcrumbBlock_select".
 */
export interface BreadcrumbBlockSelect<T extends boolean = true> {
  spacing?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              uuiColor?: T;
              uuiSize?: T;
              buttonIcon?: T;
              iconPos?: T;
            };
        id?: T;
      };
  spacing?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              uuiColor?: T;
              uuiSize?: T;
              buttonIcon?: T;
              iconPos?: T;
            };
        id?: T;
      };
  spacing?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  caption?:
    | T
    | {
        text?: T;
        link?:
          | T
          | {
              url?: T;
              text?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  spacing?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ButtonBlock_select".
 */
export interface ButtonBlockSelect<T extends boolean = true> {
  buttons?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              uuiColor?: T;
              uuiSize?: T;
              buttonIcon?: T;
              iconPos?: T;
            };
        id?: T;
      };
  layout?: T;
  alignment?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesBlock_select".
 */
export interface FeaturesBlockSelect<T extends boolean = true> {
  header?:
    | T
    | {
        showHeader?: T;
        eyebrow?: T;
        heading?: T;
        description?: T;
        headerAlignment?: T;
      };
  features?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              uuiColor?: T;
              uuiSize?: T;
              buttonIcon?: T;
              iconPos?: T;
            };
        id?: T;
      };
  layoutOptions?:
    | T
    | {
        cardStyle?: T;
        cardBackground?: T;
        columns?: T;
        iconColor?: T;
        iconTheme?: T;
        spacing?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LatestPostsBlock_select".
 */
export interface LatestPostsBlockSelect<T extends boolean = true> {
  header?:
    | T
    | {
        showHeader?: T;
        eyebrow?: T;
        heading?: T;
        description?: T;
      };
  contentSource?: T;
  opts?:
    | T
    | {
        numPosts?: T;
        categoryFilter?: T;
      };
  selectedPosts?: T;
  buttonConfig?:
    | T
    | {
        showButton?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              uuiColor?: T;
              uuiSize?: T;
              buttonIcon?: T;
              iconPos?: T;
            };
      };
  layoutOptions?:
    | T
    | {
        columns?: T;
        spacing?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  tableOfContents?:
    | T
    | {
        title?: T;
        href?: T;
        id?: T;
      };
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  contributors?: T;
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
        nickname?: T;
        avatar?: T;
      };
  populatedContributors?:
    | T
    | {
        id?: T;
        name?: T;
        nickname?: T;
        avatar?: T;
      };
  afterContent?:
    | T
    | {
        latestPosts?: T | LatestPostsBlockSelect<T>;
        cta?: T | CallToActionBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
      };
  slug?: T;
  slugLock?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  nickname?: T;
  role?: T;
  avatar?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        /**
         * Main navigation item. URL is optional when dropdown menu is enabled (label still required for dropdown trigger text).
         */
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        /**
         * Enable to show dropdown menu for this navigation item
         */
        hasDropdown?: boolean | null;
        /**
         * Links that appear in the dropdown menu
         */
        dropdownItems?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: number | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: number | Post;
                    } | null);
                url?: string | null;
                label: string;
              };
              /**
               * Brief description that appears below the link text
               */
              description?: string | null;
              /**
               * Optional icon name from @untitledui/icons (e.g., "TrendUp01", "Users01", "ArrowRight", "Download01")
               */
              icon?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Call-to-action button that appears on the right side of the header
   */
  ctaButton: {
    /**
     * Toggle to show/hide the call-to-action button
     */
    enabled?: boolean | null;
    link: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: number | Post;
          } | null);
      url?: string | null;
      label: string;
      /**
       * Button color variant from UntitledUI design system
       */
      uuiColor?: ('primary' | 'accent' | 'secondary' | 'tertiary' | 'link') | null;
      /**
       * Button size variant
       */
      uuiSize?: ('sm' | 'md' | 'lg' | 'xl') | null;
      /**
       * Optional icon name from @untitledui/icons (e.g., "ArrowRight", "Download01", "ExternalLink01"). Case-sensitive. Browse all icons at: https://icons.untitledui.com
       */
      buttonIcon?: string | null;
      /**
       * Position of the icon relative to the button text
       */
      iconPos?: ('leading' | 'trailing') | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  companyInfo?: {
    /**
     * Brief company description that appears below the logo
     */
    description?: string | null;
  };
  /**
   * Navigation columns (maximum 5 columns)
   */
  navColumns?:
    | {
        /**
         * Column heading (e.g., "Product", "Company")
         */
        label?: string | null;
        /**
         * Links for this navigation column
         */
        items?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: number | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: number | Post;
                    } | null);
                url?: string | null;
                label: string;
                /**
                 * Button color variant from UntitledUI design system
                 */
                uuiColor?: ('primary' | 'accent' | 'secondary' | 'tertiary' | 'link') | null;
                /**
                 * Button size variant
                 */
                uuiSize?: ('sm' | 'md' | 'lg' | 'xl') | null;
                /**
                 * Optional icon name from @untitledui/icons (e.g., "ArrowRight", "Download01", "ExternalLink01"). Case-sensitive. Browse all icons at: https://icons.untitledui.com
                 */
                buttonIcon?: string | null;
                /**
                 * Position of the icon relative to the button text
                 */
                iconPos?: ('leading' | 'trailing') | null;
              };
              /**
               * Optional badge to highlight new or featured items
               */
              badge?: {
                /**
                 * Badge text (e.g., "New", "Beta")
                 */
                text?: string | null;
                /**
                 * Modern badges only support gray color
                 */
                color?: 'gray' | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Social media links that appear at the bottom
   */
  socialLinks?:
    | {
        /**
         * Select the social media platform
         */
        platform?: ('x' | 'linkedin' | 'facebook' | 'github' | 'angellist' | 'dribbble' | 'layers') | null;
        /**
         * Full URL to your social media profile
         */
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Copyright notice that appears at the bottom
   */
  copyrightText?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notFound".
 */
export interface NotFound {
  id: number;
  /**
   * Main heading displayed on the 404 page
   */
  heading: string;
  /**
   * Subheading text displayed below the main heading
   */
  subheading?: string | null;
  /**
   * Link to help users navigate back (typically to the home page)
   */
  link: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
    label: string;
    /**
     * Button color variant from UntitledUI design system
     */
    uuiColor?: ('primary' | 'accent' | 'secondary' | 'tertiary' | 'link') | null;
    /**
     * Button size variant
     */
    uuiSize?: ('sm' | 'md' | 'lg' | 'xl') | null;
    /**
     * Optional icon name from @untitledui/icons (e.g., "ArrowRight", "Download01", "ExternalLink01"). Case-sensitive. Browse all icons at: https://icons.untitledui.com
     */
    buttonIcon?: string | null;
    /**
     * Position of the icon relative to the button text
     */
    iconPos?: ('leading' | 'trailing') | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        hasDropdown?: T;
        dropdownItems?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              description?: T;
              icon?: T;
              id?: T;
            };
        id?: T;
      };
  ctaButton?:
    | T
    | {
        enabled?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              uuiColor?: T;
              uuiSize?: T;
              buttonIcon?: T;
              iconPos?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  companyInfo?:
    | T
    | {
        description?: T;
      };
  navColumns?:
    | T
    | {
        label?: T;
        items?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    uuiColor?: T;
                    uuiSize?: T;
                    buttonIcon?: T;
                    iconPos?: T;
                  };
              badge?:
                | T
                | {
                    text?: T;
                    color?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  copyrightText?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notFound_select".
 */
export interface NotFoundSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  link?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
        uuiColor?: T;
        uuiSize?: T;
        buttonIcon?: T;
        iconPos?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "QuoteBlock".
 */
export interface QuoteBlock {
  /**
   * The quote text
   */
  quote: string;
  author: {
    name: string;
    /**
     * Author title or role
     */
    role?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'quote';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ConclusionBlock".
 */
export interface ConclusionBlock {
  /**
   * Heading for the conclusion section
   */
  title: string;
  /**
   * Conclusion content (supports multiple paragraphs)
   */
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'conclusion';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}